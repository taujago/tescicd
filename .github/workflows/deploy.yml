name: Install ke server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  Test:
      runs-on: ubuntu-latest
      services: 
        mysql: 
          image: mysql:8.0.21
          env: 
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: unittest
          ports: 
            - 3306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      steps: 
        - uses: actions/checkout@v2
        - name: Copy the .env 
          run: cp .env.test .env 
        - name: Install composer 
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        - name: Configure storage permissin 
          run: chmod -R 777 storage bootstrap/cache 
        - name: Generate api key 
          run: php artisan key:generate
        - name: clear cache
          run: php artisan config:clear 
        - name: Do migration database 
          run: php artisan migrate
        - name: Do data seeder 
          run: php artisan db:seed --class=MahasiswaSeeder
        - name: Do unit test 
          run: ./vendor/bin/phpunit

  build:
      runs-on: ubuntu-latest
      needs: Test
      steps: 
      
        - name: Deploy ke server
          uses: appleboy/ssh-action@v0.1.4
          with: 
            host: ${{ secrets.HOST }}
            username: root
            key: ${{ secrets.PRIVATE_KEY }}
            port: 22
            script: |
              cd /var/www/html/release              
              git pull
              composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
              cp .env.prod .env 
              php artisan key:generate
              php artisan config:clear 
              php artisan migrate
              php artisan db:seed --class=MahasiswaSeeder

  deployToAWS:
    runs-on: ubuntu-latest 
    needs: build
    steps: 
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with: 
        token: ${{secrets.github_token}}  
    - name: Coba lihat version nya 
      run: echo "vesionnnya is $BUILD_NUMBER"
    - name: COnfigure AWS Cred 
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-east-2
      
    - name: Copy files to the test website with the AWS CLI
      run: |
        VERSION=$BUILD_NUMBER
        NAME="ZONTOOL${VERSION}ZONTOOL"
        echo "NAMA $NAME"
        AMI=`aws ec2 create-image --instance-id i-011db2ec73bf07376 --name "$NAME" --no-reboot --output text`
        echo "ID AMI ${AMI}"
        echo "ami createed"
        NEW_LC="LCv${VERSION}"
        echo "create launch configuration"
        aws autoscaling create-launch-configuration  --launch-configuration-name "${NEW_LC}" --image-id ${AMI} --instance-type a1.medium
        echo "update autoscaling group"
        aws autoscaling update-auto-scaling-group --auto-scaling-group-name ZontoolAutoSG --launch-configuration-name "${NEW_LC}" 


# AKIAYGVUCAHHW7EDJCMT    s

# QpApHcxkkHE+ZD2H6CZvqTdy9rgGln9gnIzLhpnR